{"componentChunkName":"component---src-templates-docs-js","path":"/EDAProjects/EDA-Error-Handling-Playground","result":{"data":{"site":{"siteMetadata":{"title":"EDALearn","docsLocation":"https://github.com/EDALearn/EDALearn.github.io/blob/website/content"}},"mdx":{"fields":{"id":"b2fe9120-08b2-5502-b83b-1d07f6b5ed10","title":"EDA Error Handling Playground","slug":"/EDAProjects/EDA-Error-Handling-Playground"},"body":"var _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"title\": \"EDA Error Handling Playground\",\n  \"metaTitle\": \"EDA Error Handling Playground\",\n  \"metaDescription\": \"EDA Error Handling Playground\",\n  \"slug\": \"EDAProjects/EDA-Error-Handling-Playground\",\n  \"order\": 3\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u26A0\\uFE0F WORK IN PROGRESS \\u26A0\\uFE0F\"), mdx(\"p\", null, \"This project is a playground to test different error handling patterns in event-driven architectures.\"), mdx(\"h1\", null, \"Getting Started\"), mdx(\"p\", null, \"Source code available at: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/EDALearn/EDA-Error-Handling-Playground\"\n  }, \"https://github.com/EDALearn/EDA-Error-Handling-Playground\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"git clone https://github.com/EDALearn/EDA-Error-Handling-Playground.git\\ncd EDA-Error-Handling-Playground\\n\")), mdx(\"p\", null, \"After cloning the repository, you can build and run the application using:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"docker-compose up -d\\nmvn spring-boot:run\\n\")), mdx(\"h2\", null, \"Testing\"), mdx(\"h3\", null, \"Create a new Customer via REST API\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"curl -X POST --location \\\"http://localhost:8080/api/customers\\\" \\\\\\n    -H \\\"Authorization: Basic dXNlcjpwYXNzd29yZA==\\\" \\\\\\n    -H \\\"Content-Type: application/json\\\" \\\\\\n    -d '{\\n            \\\"username\\\": \\\"ivangsa{{suffix}}\\\",\\n            \\\"firstName\\\": \\\"Ivan\\\",\\n            \\\"lastName\\\": \\\"Garcia Sainz-Aja\\\",\\n            \\\"email\\\": \\\"ivangsa{{suffix}}@domain.com\\\",\\n            \\\"phone\\\": \\\"(505) 503-4455\\\",\\n            \\\"address\\\": {\\n              \\\"street\\\": \\\"Rue del Percebe, 13\\\",\\n              \\\"city\\\": \\\"A Coru\\xF1a\\\",\\n              \\\"state\\\": \\\"A Coru\\xF1a\\\",\\n              \\\"zip\\\": \\\"15002\\\",\\n              \\\"type\\\": \\\"HOME\\\"\\n            }\\n        }'\\n\")), mdx(\"h3\", null, \"Create Customers via Kafka\"), mdx(\"p\", null, \"Send a valid message to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"customer.create\"), \" topic:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"topic_name='customer.create'\\njson_message='\\n{\\n    \\\"username\\\": \\\"ivangsa\\\",\\n    \\\"firstName\\\": \\\"Ivan\\\",\\n    \\\"lastName\\\": \\\"Garcia Sainz-Aja\\\",\\n    \\\"email\\\": \\\"ivangsa@domain.com\\\",\\n    \\\"phone\\\": \\\"(505) 503-4455\\\",\\n    \\\"address\\\": {\\n      \\\"street\\\": \\\"Rue del Percebe, 13\\\",\\n      \\\"city\\\": \\\"A Coru\\xF1a\\\",\\n      \\\"state\\\": \\\"A Coru\\xF1a\\\",\\n      \\\"zip\\\": \\\"15002\\\",\\n      \\\"type\\\": \\\"HOME\\\"\\n    }\\n}\\n'\\n\\njson_message=$(echo $json_message | tr -d '\\\\n')\\ndocker-compose exec -T kafka bash -c \\\"echo '$json_message' | kafka-console-producer --broker-list localhost:9092 --topic $topic_name\\\"\\n\")), mdx(\"p\", null, \"Send an invalid message (serialization error) to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"customer.create\"), \" topic:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-shell\"\n  }, \"topic_name='customer.create'\\njson_message='\\n{\\n    \\\"username\\\": \\\"ivangsa\\\",\\n    \\\"firstName\\\": \\\"Ivan\\\",\\n    \\\"lastName\\\": \\\"Garcia Sainz-Aja\\\",\\n    \\\"email\\\": \\\"ivangsa@domain.com\\\",\\n    \\\"phone\\\": \\\"(505) 503-4455\\\",\\n    \\\"address\\\": {\\n      \\\"id\\\": \\\"X\\\"\\n    }\\n}\\n'\\n\\njson_message=$(echo $json_message | tr -d '\\\\n')\\ndocker-compose exec -T kafka bash -c \\\"echo '$json_message' | kafka-console-producer --broker-list localhost:9092 --topic $topic_name\\\"\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#getting-started","title":"Getting Started","items":[{"url":"#testing","title":"Testing","items":[{"url":"#create-a-new-customer-via-rest-api","title":"Create a new Customer via REST API"},{"url":"#create-customers-via-kafka","title":"Create Customers via Kafka"}]}]}]},"parent":{"relativePath":"EDAProjects/EDA-Error-Handling-Playground.mdx"},"frontmatter":{"metaTitle":"EDA Error Handling Playground","metaDescription":"EDA Error Handling Playground"}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/EDAProjects","title":"EDA Learn Projects"}}},{"node":{"fields":{"slug":"/getting-started","title":"EDA Learn - Getting Started"}}},{"node":{"fields":{"slug":"/EDAPatterns","title":"EDA Patterns"}}},{"node":{"fields":{"slug":"/","title":"EDA Learn"}}},{"node":{"fields":{"slug":"/EDAConcepts","title":"EDA Foundational Concepts"}}},{"node":{"fields":{"slug":"/EDAProjects/EDA-Observability-Playground","title":"EDA Observability Playground"}}},{"node":{"fields":{"slug":"/EDAProjects/EDA-Playground-Online-Food-Delivery","title":"EDA Playground - Online Food Delivery"}}},{"node":{"fields":{"slug":"/EDAProjects/EDA-Error-Handling-Playground","title":"EDA Error Handling Playground"}}},{"node":{"fields":{"slug":"/EDAProjects/Three-Architectures-Tale-Of-OverEngineering","title":"Three Architectures - A Tale Of OverEngineering"}}},{"node":{"fields":{"slug":"/EDAProjects/EDA-Modulith-Playground","title":"‚≠ê EDA Modulith Playground"}}}]}},"pageContext":{"id":"b2fe9120-08b2-5502-b83b-1d07f6b5ed10"}},"staticQueryHashes":["2186156217","3706406642","417421954"]}